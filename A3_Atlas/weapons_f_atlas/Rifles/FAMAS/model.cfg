class cfgSkeletons
{
	class Atlas_arifle_famasBaseSkeleton
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[]=
		{
			"zasleh","",
			"detente","",
			"armement","",
			"magazine","",
			"mobile","",
			
			"Safety_front", "",
			
			"Bipod_Legs", "",
			"Bipod_L", "Bipod_Legs",
			"Bipod_R", "Bipod_Legs",
			
			"RifleGrenadeHide", "",
			"AttachmentHide", "",
			
			"OP", "",
			
			"m203_barrel","",
			"m203_shell","",
			"m203_shell_hide","m203_shell"
		};
	};
	class Atlas_arifle_famasM203BaseSkeleton
	{
		isDiscrete = 1;
		skeletonInherit = "Atlas_arifle_famasBaseSkeleton";
		skeletonBones[]=
		{
			"OPM203", "",
			"op_end", "OPM203"
		};
	};
};
class cfgModels
{
	class Default
	{
		sections[]={};
		sectionsInherit="";
		skeletonName="";
	};
	class Atlas_arifle_famasBase: Default
	{
		skeletonName="Atlas_arifle_famasBaseSkeleton";
		sectionsInherit="";
		sections[]=
		{
			"zasleh",
			"Bipod_L",
			"Bipod_R", 

			"CamoG2_1", 
			"CamoG2_2", 
			"CamoG2_3",
			"CamoG2_Low",
			
			"CamoRail",
			"CamoG2_Grip",
			
			"CamoF1_2",
			"CamoF1_3",
		
			"CamoM203",
			"CamoM203_Low"
		};
		class Animations
		{
			class muzzleflash_hide
			{
				type="hide";
				source="hasSuppressor";
				selection="zasleh";
				minValue = 0.0;
				maxvalue = 0.25;
				hideValue = 0.01;
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=1;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
			class magazine_hide
            {
                type="hide";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
                minPhase=0;
                maxPhase=1;
                minValue=0;
                maxValue=1;
                memory=0;
                hideValue=(26/128);
                unHideValue=(65/128);
            };
			/*class magazine_hide
            {
                type="hide";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
                minPhase=0;
                maxPhase=1;
                minValue=0;
                maxValue=1;
                memory=0;
                hideValue=0.1829;
                unHideValue=0.5487;
            };*/
            class no_magazine
            {
                type="hide";
                source="hasmagazine";
                selection="magazine";
                sourceAddress="clamp";
                minPhase=0;
                maxPhase=1;
                minValue=0;
                maxValue=1;
                memory=0;
                hideValue=0.5;
                unHideValue=-1;
            };
			class magazine_reload_move_1
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
				axis = "magazine_axis";
                sourceAddress="clamp";
                minPhase=(21/128);
                maxPhase=(25/128);
                minValue=(21/128);
                maxValue=(25/128);
                memory=0;
                offset0=0;
                offset1=19.5;
            };
			class magazine_reload_move_2: magazine_reload_move_1
            {
                minPhase=(67/128);
                maxPhase=(71/128);
                minValue=(67/128);
                maxValue=(71/128);
                memory=0;
                offset0=0;
                offset1=-19.5;
            };
			class reload_rearmement
			{
				type="translation";
				source="reloadMagazine";
				selection="armement";
				begin="armement_axis_begin";
				end="armement_axis_finish";
                minValue=(102/128);
                maxValue=(105/128);
				offset0="0";
				offset1="1";
			};
			class reload_rearmement2: reload_rearmement
			{
                minValue=(108/128);
                maxValue=(110/128);
				offset0="0";
				offset1="-1";
			};
			/*class rearmement: magazine_reload_move_1
			{
				selection="armement";
				begin="armement_axis_begin";
				end="armement_axis_finish";
                minPhase=(103/128);
                maxPhase=(106/128);
                minValue=(103/128);
                maxValue=(106/128);
				offset0=0;
				offset1=1;
			};
			class rearmement2: rearmement
			{
                minPhase=(108/128);
                maxPhase=(110/128);
                minValue=(108/128);
                maxValue=(110/128);
				offset0=0;
				offset1=-1;
			};*/
            /*class magazine_reload_move_1
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
				axis = "magazine_axis";
                sourceAddress="clamp";
                minPhase=0.1219;
                maxPhase=0.1829;
                minValue=0.1219;
                maxValue=0.1829;
                memory=0;
                offset0=0;
                offset1=19.5;
            };
            class magazine_reload_move_2
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
				axis = "magazine_axis";
                minPhase=0.2;
                maxPhase=0.3;
                minValue=0.2;
                maxValue=0.3;
                memory=0;
                offset0=0;
                offset1=-1.63;
            };
            class magazine_reload_move_3
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
				axis = "magazine_axis";
                minPhase=0.5487805;
                maxPhase=0.597561;
                minValue=0.5487805;
                maxValue=0.597561;
                memory=0;
                offset0=0;
                offset1=-8.1;
            };
            class magazine_reload_move_4
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
				axis = "magazine_axis";
                minPhase=0.597561;
                maxPhase=0.6341463;
                minValue=0.597561;
                maxValue=0.6341463;
                memory=0;
                offset0=0;
                offset1=1.6;
            };
            class magazine_reload_move_5
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
				axis = "magazine_axis";
                minPhase=0.6341463;
                maxPhase=0.6585366;
                minValue=0.6341463;
                maxValue=0.6585366;
                memory=0;
                offset0=0;
                offset1=-11.37;
            };
            class magazine_reload_move_h_1
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
				axis = "magazine_axis_h";
                minPhase=0.2;
                maxPhase=0.3;
                minValue=0.2;
                maxValue=0.3;
                memory=0;
                offset0=0;
                offset1=-2.24;
            };
            class magazine_reload_move_h_2
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
				axis = "magazine_axis_h";
                minPhase=0.5487805;
                maxPhase=0.597561;
                minValue=0.5487805;
                maxValue=0.597561;
                memory=0;
                offset0=0;
                offset1=1.47;
            };
            class magazine_reload_move_h_3
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
                sourceAddress="clamp";
				axis = "magazine_axis_h";
                minPhase=0.597561;
                maxPhase=0.6341463;
                minValue=0.597561;
                maxValue=0.6341463;
                memory=0;
                offset0=0;
                offset1=0.62;
            };
            class magazine_reload_move_h_4
            {
                type="translation";
                source="reloadmagazine";
                selection="magazine";
				axis = "magazine_axis_h";
                sourceAddress="clamp";
                minPhase=0.6341463;
                maxPhase=0.6585366;
                minValue=0.6341463;
                maxValue=0.6585366;
                memory=0;
                offset0=0;
                offset1=0.15;
            };
			class rearmement
			{
				type="translation";
				source="reloadMagazine";
				selection="armement";
				begin="armement_axis_begin";
				end="armement_axis_finish";
				minValue=0;
				maxValue="1";
				offset0="0";
				offset1="1";
			};*/
			class detente
			{
				type="rotationZ";
				source="reload";
				selection="detente";
				axis="detente_axis";
				minValue=0;
				maxValue="6";
				angle0="0";
				angle1="-6";
			};
			class armement
			{
				type="translation";
				source="reload";
				selection="armement";
				begin="armement_axis_begin";
				end="armement_axis_finish";
				minValue=0;
				maxValue="1";
				offset0="0";
				offset1="1";
			};
			class mobile
			{
				type="translation";
				source="reload";
				selection="mobile";
				begin="mobile_axis_begin";
				end="mobile_axis_finish";
				minValue=0;
				maxValue="1";
				offset0="0";
				offset1="1";
			};
			class Safety_mode_rot
			{
				type			= rotation;
				source			= weaponMode;
				selection		= "Safety_front";
				axis			= "Safety_front_axis";
				memory			= 1;
				minValue		= 0;
				maxValue		= 0.25;
				angle0			= 0;
				angle1			= (rad -90);
			};
			
			class Bipod_L
			{
				type			= rotation;
				source			= bipod;
				sourceAddress	= clamp;
				selection		= "Bipod_L";
				axis			= "Bipod_L_axis";
				minValue		= 0;
				maxValue		= 1;
				angle0			= (rad 0);
				angle1			= (rad -90);
			};

			class Bipod_R
			{
				type			= rotation;
				source			= bipod;
				selection		= "Bipod_R";
				axis			= "Bipod_R_axis";
				minValue		= 0;
				maxValue		= 1;
				angle0			= (rad 0);
				angle1			= (rad -90);
			};
			class legs: Bipod_L
			{
				selection		= "bipod";
				axis			= "bipod_legs_axis";
				angle0			= (rad 0);
				angle1			= (rad 90);
			};
			
			class RifleGrenadeHide
            {
                type="hide";
                source="weaponMuzzle";
                selection="RifleGrenadeHide";
                sourceAddress="clamp";
                minPhase=1;
                maxPhase=0;
                minValue=0;
                maxValue=1;
				hideValue=-0.5;
                unHideValue=1;
            };
			class OP_turn
			{
			    type="rotation";
                source="weaponMuzzle";
                selection="OP";
                sourceAddress="clamp";
				axis="OP_axis";
				memory=1;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=(rad -45);
			};
			class AttachmentHide
			{
				type="hide";
                source="weaponMuzzle";
                selection="AttachmentHide";
                sourceAddress="clamp";
                minPhase=0;
                maxPhase=1;
                minValue=0;
                maxValue=1;			
			};
		};
	};
	class Atlas_arifle_g2_hg: Atlas_arifle_famasBase
	{
		sectionsInherit = "Atlas_arifle_famasBase";
	};
	class Atlas_arifle_g2: Atlas_arifle_famasBase
	{
		sectionsInherit = "Atlas_arifle_famasBase";
	};
	class Atlas_arifle_famas_g4: Atlas_arifle_famasBase
	{
		sectionsInherit = "Atlas_arifle_famasBase";
	};
	class Atlas_arifle_famas_g4_hg: Atlas_arifle_famasBase
	{
		sectionsInherit = "Atlas_arifle_famasBase";
	};
	class Atlas_arifle_G2_M203Base: Atlas_arifle_famasBase
	{
		sectionsInherit = "Atlas_arifle_famasBase";
		skeletonName = "Atlas_arifle_famasM203BaseSkeleton";
		class Animations: Animations
		{
			class OP_ROT
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				sourceAddress="clamp"; // loop when phase out of bounds
				selection="OPM203";       // selection we want to rotate
				axis="op_axis";       // has its own axis
				minPhase=0;
                maxPhase=0.12;
                minValue=0;
                maxValue=0.12;
                memory=0;
                angle0=0.03839725;
                angle1=0;
			};	
			class op_rot2
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.124;
				maxPhase=0.125;
				minValue=0.124;
				maxValue=0.125;
				memory=0;
				angle0=0;
				angle1=0.06108653;
				axis="op_axis";       // has its own axis
			};
			class op_rot3
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.24;
				maxPhase=0.25;
				minValue=0.24;
				maxValue=0.25;
				memory=0;
				angle0=0;
				angle1=0.01919862;
				axis="op_axis";       // has its own axis
			};
			class op_rot4
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.374;
				maxPhase=0.375;
				minValue=0.374;
				maxValue=0.375;
				memory=0;
				angle0=0;
				angle1=0.04014257;
				axis="op_axis";       // has its own axis
			};
			class op_rot5
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.49;
				maxPhase=0.5;
				minValue=0.49;
				maxValue=0.5;
				memory=0;
				angle0=0;
				angle1=0.06108653;
				axis="op_axis";       // has its own axis
			};
			class op_rot6
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.624;
				maxPhase=0.625;
				minValue=0.624;
				maxValue=0.625;
				memory=0;
				angle0=0;
				angle1=0.05585054;
				axis="op_axis";       // has its own axis
			};
			class op_rot7
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.74;
				maxPhase=0.75;
				minValue=0.74;
				maxValue=0.75;
				memory=0;
				angle0=0;
				angle1=0.0593412;
				axis="op_axis";       // has its own axis
			};
			class op_rot8
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.874;
				maxPhase=0.875;
				minValue=0.874;
				maxValue=0.875;
				memory=0;
				angle0=0;
				angle1=0.08203048;
				axis="op_axis";       // has its own axis
			};
			class op_rot9
			{
				type="rotation";
				source="zeroing.1";    // use second muzzle zeroing for rotation
				selection="OPM203";
				sourceAddress="clamp";
				minPhase=0.99;
				maxPhase=1;
				minValue=0.99;
				maxValue=1;
				memory=0;
				angle0=0;
				angle1=0.08115782;
				axis="op_axis";       // has its own axis
			};
			class op_move
			{
				type="translation";
				source="isselected";
				selection="op_end";
				sourceAddress="clamp";
				minPhase=0;
				maxPhase=1;
				minValue=0;
				maxValue=1;
				memory=0;
				offset0=0;
				offset1=2;
				axis="op_move";       // has its own axis
			};
			
            #include "\A3_Aegis\weapons_f_aegis\Rifles\M4A1\m203anim.inc"
		};
	};
	class Atlas_arifle_G2_M203: Atlas_arifle_G2_M203Base
	{
	};
	class Atlas_arifle_famas_G4_M203: Atlas_arifle_G2_M203Base
	{
	};
	class Atlas_arifle_famas_f1: Atlas_arifle_famasBase
	{
		sectionsInherit = "Atlas_arifle_famasBase";
		sections[] = 
		{
			"CamoF1_1", 
			"CamoF1_2", 
			"CamoF1_3",
			"Camo_Low",
			
			"CamoRail",
			"CamoG2_Grip",
		
			"CamoM203",
			"CamoM203_Low"
		};		
	};
	class Atlas_arifle_f1_hg: Atlas_arifle_famas_f1
	{
	};
	class Atlas_arifle_F1_M203: Atlas_arifle_G2_M203
	{
		sectionsInherit = "Atlas_arifle_famasBase";
		sections[] = 
		{
			"CamoF1_1", 
			"CamoF1_2", 
			"CamoF1_3",
			"Camo_Low",
			
			"CamoRail",
			"CamoG2_Grip",
		
			"CamoM203",
			"CamoM203_Low"
		};		
	};
	
	
	class famas_25Rnd
	{
		sections[] = {"Camo1", "Camo_Low"};
	};
};
