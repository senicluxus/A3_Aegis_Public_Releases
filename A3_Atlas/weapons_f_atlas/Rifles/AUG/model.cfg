class CfgSkeletons
{
	class Default
    {
        isDiscrete = true;
        skeletonInherit = "";
        skeletonBones[] = {};
    };
	class AUG_Base_F_skeleton: Default
	{
		isDiscrete = true;
		skeletonInherit = Default;
		skeletonBones[] =
		{
			BackSight,"",
			bolt,"",
			charging_handle,bolt,
			flash_hider,"",
			gas_switch,"",
			ForeSight,"",
			magazine,"",
			trigger,"",

			GL,"",
			GL_lock,GL,

			GL_cartridge,GL,
			GL_bullet,GL_cartridge,

			OP,"",
			OP_hide,OP,
			OP_end,OP,

			zasleh,""
		};
	};
};
class CfgModels
{
	class Default
    {
        sectionsInherit = "";
        sections[] = {};
        skeletonName = "";
    };
	class AUG_Base_F: Default
	{
        sectionsInherit = Default;
		sections[] =
		{
			Camo,
			Camo1,
			Camo2,
			OP,
			zasleh
		};
		skeletonName = AUG_Base_F_skeleton;
		class Animations
		{
			// trigger animation
			class trigger
			{
				type = translation;
				source = trigger.0;
				selection = trigger;
				axis = trigger_axis;
				minValue = 0;
				maxValue = 1;
				offset0 = 0;
				offset1 = -0.1;
			};

			// bolt animations
			class bolt
			{
				type = translation;
				source = reload.0;
				sourceAddress = clamp;
				selection = bolt;
				axis = bolt_axis;
				minValue = 0.5;
				maxValue = 1;
				offset0 = 0;
				offset1 = -1.16;
			};
			class bolt_2: bolt
			{
				minValue = 0;
				maxValue = 0.5;
				offset0 = 0;
				offset1 = 1.16;
			};
            /* The bolt does not stay open on the AUG when empty, so we do not need this animation
			class bolt_empty: bolt
			{
				source = isEmptyNoReload.0;
				minValue = 0;
				maxValue = 1;
				offset0 = 0;
				offset1 = 1.16;
			};
            */

			// bolt reload animations
			class bolt_reload_move_1
			{
				type = translation;
				source = reloadMagazine.0;
				selection = bolt;
				axis = bolt_axis;
				minValue = 0.04;
				maxValue = 0.06;
				offset0 = 0;
				offset1 = 1.16;
			};
			class bolt_reload_move_2: bolt_reload_move_1
			{
				minValue = 0.79;
				maxValue = 0.80;
				offset0 = 0;
				offset1 = -1.16;
			};

			// charging handle reload animations
			class charging_handle_reload_rot_1
			{
				type = rotation;
				source = reloadMagazine.0;
				selection = charging_handle;
				axis = charging_handle_axis;
				minValue = 0.08;
				maxValue = 0.09;
                angle0 = (rad 0);
                angle1 = (rad 50);
			};
			class charging_handle_reload_rot_2: charging_handle_reload_rot_1
			{
				source = reloadMagazine.0;
				minValue = 0.77;
				maxValue = 0.78;
                angle0 = (rad 0);
                angle1 = (rad -50);
			};

            // charging handle GL animations
			class charging_handle_GL_rot
			{
				type = rotation;
				source = weaponMuzzle;
				selection = charging_handle;
				axis = charging_handle_axis;
				minValue = 0;
				maxValue = 1;
                angle0 = (rad 0);
                angle1 = (rad 50);
			};

			// magazine reload animations
			class magazine_reload_hide
			{
				type = hide;
				source = reloadMagazine.0;
				selection = magazine;
				minValue = 0;
				maxValue = 1;
				hideValue = 0.27;
				unhideValue = 0.61;
			};
			class magazine_reload_move_1
			{
				type = translation;
				source = reloadMagazine.0;
				selection = magazine;
				axis = magazine_axis;
				minValue = 0.24;
				maxValue = 0.26;
				offset0 = 0;
				offset1 = 1;
			};
			class magazine_reload_move_2: magazine_reload_move_1
			{
				minValue = 0.63;
				maxValue = 0.65;
				offset0 = 0;
				offset1 = -1;
			};
			class no_magazine
			{
				type = hide;
				source = hasMagazine.0;
				selection = magazine;
				minValue = 0;
				maxValue = 1;
				hideValue = 0.5;
				unhideValue = -1;
			};

			// grenade launcher reload animations
			class magazine_gl_reload_move_1
			{
				type = rotation;
				source = reloadMagazine.1;
				selection = GL;
				axis = GL_axis;
				minValue = 0.102041;
				maxValue = 0.142857;
				angle0 = (rad 0);
				angle1 = -0.4272566;
			};
			class magazine_gl_reload_move_2: magazine_gl_reload_move_1
			{
				minValue = 0.806122;
				maxValue = 0.816327;
				angle0 = (rad 0);
				angle1 = 0.4272566;
			};

			// grenade launcher lock reload animations
			class magazine_gl_lock_reload_move_1
			{
				type = translation;
				source = reloadMagazine.1;
				selection = GL_lock;
				axis = GL_lock_axis;
				minValue = 0.102041;
				maxValue = 0.142857;
				offset0 = 0;
				offset1 = 0.8;
			};
			class magazine_gl_lock_reload_move_2: magazine_gl_lock_reload_move_1
			{
				minValue = 0.806122;
				maxValue = 0.816327;
				offset0 = 0;
				offset1 = -0.8;
			};

			// grenade launcher grenade reload animations
			class grenade_reload_move_1
			{
				type = translation;
				source = reloadMagazine.1;
				selection = GL_cartridge;
				axis = GL_cartridge_axis;
				minValue = 0.193878;
				maxValue = 0.214286;
				offset0 = 0;
				offset1 = -1.8;
			};
			class grenade_reload_move_2: grenade_reload_move_1
			{
				minValue = 0.540816;
				maxValue = 0.591837;
				offset0 = 0;
				offset1 = 1.3;
			};
			class grenade_reload_move_3: grenade_reload_move_1
			{
				minValue = 0.612245;
				maxValue = 0.642857;
				offset0 = 0;
				offset1 = 0.5;
			};
			class magazine_gl_reload_hide
			{
				type = hide;
				source = reloadMagazine.1;
				selection = GL_cartridge;
				minValue = 0;
				maxValue = 1;
                hideValue = 0.214286;
                unHideValue = 0.561224;
			};
			class magazine_gl_bullet_reload_hide
			{
				type = hide;
				source = reloadMagazine.1;
				selection = GL_bullet;
				minValue = 0;
				maxValue = 1;
                hideValue = 0.000001;
                unHideValue = 0.561224;
			};

			// muzzle flash animations
			class zaslehROT
			{
				type = rotationX;
				source = ammoRandom.0;
				sourceAddress = loop;
				selection = zasleh;
				axis = "";
				centerFirstVertex = true;
				minValue = 0;
				maxValue = 4;
				angle0 = (rad 0);
				angle1 = (rad 360);
			};

			// grenade launcher optic animations
			class OP_ROT1
			{
				type = rotation;
				source = zeroing.1;
				selection = OP;
				axis = OP_axis;
				minValue = 0;
				maxValue = 0.12;
				angle0 = 0.03839725;
				angle1 = 0;
			};
			class OP_ROT2: OP_ROT1
			{
				minValue = 0.124;
				maxValue = 0.125;
				angle0 = 0;
				angle1 = 0.06108653;
			};
			class OP_ROT3: OP_ROT1
			{
				minValue = 0.24;
				maxValue = 0.25;
				angle0 = 0;
				angle1 = 0.01919862;
			};
			class OP_ROT4: OP_ROT1
			{
				minValue = 0.374;
				maxValue = 0.375;
				angle0 = 0;
				angle1 = 0.04014257;
			};
			class OP_ROT5: OP_ROT1
			{
				minValue = 0.49;
				maxValue = 0.5;
				angle0 = 0;
				angle1 = 0.06108653;
			};
			class OP_ROT6: OP_ROT1
			{
				minValue = 0.624;
				maxValue = 0.625;
				angle0 = 0;
				angle1 = 0.05585054;
			};
			class OP_ROT7: OP_ROT1
			{
				minValue = 0.74;
				maxValue = 0.75;
				angle0 = 0;
				angle1 = 0.0593412;
			};
			class OP_ROT8: OP_ROT1
			{
				minValue = 0.874;
				maxValue = 0.875;
				angle0 = 0;
				angle1 = 0.08203048;
			};
			class OP_ROT9: OP_ROT1
			{
				minValue = 0.99;
				maxValue = 1;
				angle0 = 0;
				angle1 = 0.08115782;
			};

			// ironsights animations
			class BackSight_optic
			{
				type = rotation;
				source = hasOptics;
				selection = BackSight;
				axis = BackSight_axis;
				memory = true;
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = (rad 90);
			};
			class ForeSight_optic: BackSight_optic
			{
				selection = ForeSight;
				axis = ForeSight_axis;
			};

			// gas switch animations
			class gas_switch_rot
			{
				type = rotation;
				source = hasSuppressor;
				selection = gas_switch;
				axis = gas_switch_axis;
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = (rad -55);
			};

			// attachments hider
			class muzzle_hide
			{
				type = hide;
				source = hasSuppressor;
				selection = flash_hider;
				minValue = 0;
				maxValue = 1;
				hideValue = 0.5;
				unhideValue = -1;
			};

			// grenade launcher sight hider
			class OP_hide_when_reloadmagazine
			{
				type = hide;
				source = reloadMagazine.1;
				selection = OP_hide;
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
				unHideValue = -1;
			};
			class OP_hide_if_not_selected: OP_hide_when_reloadmagazine
			{
				source = weaponMuzzle;
				hideValue = 0;
				unHideValue = 1;
			};
			class OP_hide_if_not_weapon_selected: OP_hide_when_reloadmagazine
			{
				source = isSelected;
				hideValue = 0;
				unHideValue = 1;
			};
			class OP_move
			{
				type = translation;
				source = isSelected;
				selection = OP_end;
				axis = OP_move;
				minValue = 0;
				maxValue = 1;
				offset0 = 0;
				offset1 = 2;
			};
		};
	};
	class AUG_C_F: AUG_Base_F{};
	class AUG_F: AUG_Base_F{};
	class AUG_GL_F: AUG_Base_F{};
};